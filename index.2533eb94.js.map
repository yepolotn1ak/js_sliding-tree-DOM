{"mappings":"I,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEC,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAAG,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAAO,OAAO,CAAC,SAAC,CAA7C,EACC,IAAM,EAAO,SAAS,aAAa,CAAC,OAEpC,CAAA,EAAK,WAAW,CAAG,EAAG,UAAU,CAAC,WAAW,CAC5C,EAAG,UAAU,CAAC,WAAW,CAAG,GAC5B,EAAG,OAAO,CAAC,EACb,GAEA,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAA3D,EACE,IAAM,EAAK,EAAE,MAAM,CAAC,OAAO,CAAC,KAExB,CAAA,EAAG,QAAQ,CAAC,MAAM,CAAG,GAAK,EAAE,MAAM,GAAK,EAAG,UAAU,GAClD,AAAsC,SAAtC,EAAG,gBAAgB,CAAC,KAAK,CAAC,OAAO,CACnC,EAAG,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAG,QAEpC,EAAG,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAG,OAG1C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n_to_consumable_array(document.querySelectorAll(\"li\")).forEach(function(li) {\n    var span = document.createElement(\"span\");\n    span.textContent = li.firstChild.textContent;\n    li.firstChild.textContent = \"\";\n    li.prepend(span);\n});\ndocument.querySelector(\".tree\").addEventListener(\"click\", function(e) {\n    var li = e.target.closest(\"li\");\n    if (li.children.length > 1 && e.target === li.firstChild) {\n        if (li.lastElementChild.style.display === \"none\") li.lastElementChild.style.display = \"block\";\n        else li.lastElementChild.style.display = \"none\";\n    }\n});\n\n//# sourceMappingURL=index.2533eb94.js.map\n","'use strict';\n\n[...document.querySelectorAll('li')].forEach((li) => {\n  const span = document.createElement('span');\n\n  span.textContent = li.firstChild.textContent;\n  li.firstChild.textContent = '';\n  li.prepend(span);\n});\n\ndocument.querySelector('.tree').addEventListener('click', (e) => {\n  const li = e.target.closest('li');\n\n  if (li.children.length > 1 && e.target === li.firstChild) {\n    if (li.lastElementChild.style.display === 'none') {\n      li.lastElementChild.style.display = 'block';\n    } else {\n      li.lastElementChild.style.display = 'none';\n    }\n  }\n});\n"],"names":["arr","_array_like_to_array","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","li","span","createElement","textContent","firstChild","prepend","querySelector","addEventListener","e","target","closest","children","lastElementChild","style","display"],"version":3,"file":"index.2533eb94.js.map"}